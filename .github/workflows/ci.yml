name: CI
on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    name: Test

    steps:
      - name: Checkout code
        uses: actions/checkout@master

      - name: Setup node
        uses: actions/setup-node@v2.1.5
        with:
          node-version: '14.x'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Yarn cache
        uses: actions/cache@v2.1.5
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Build
        run: |
          yarn install --frozen-lockfile
          yarn build
          yarn build:chrome

      - name: Run tests
        env:
          CI: true
        run: |
          yarn test

      - name: Package
        run: yarn package

  release:
    runs-on: ubuntu-latest
    needs: test
    if: startsWith(github.ref, 'refs/tags/v')
    name: Release

    steps:
      - name: Checkout code
        uses: actions/checkout@master

      - name: Setup node
        uses: actions/setup-node@v2.1.5
        with:
          node-version: '14.x'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Try to restore yarn cache
        uses: actions/cache@v2.1.5
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build assets
        env:
          RELEASE_BUILD: 1
          BUGSNAG_API_KEY: ${{ secrets.BUGSNAG_API_KEY }}
        run: |
          yarn package
          yarn package:chrome
          yarn zip-src

      - name: Read package version
        id: read_package_version
        uses: ./.github/actions/read-package-version

      - name: Create release
        id: create_release
        uses: ./.github/actions/create-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          chrome_package_name: ${{ steps.read_package_version.outputs.chrome_package_name }}
          firefox_package_name: ${{ steps.read_package_version.outputs.firefox_package_name }}
          prerelease: ${{ steps.read_package_version.outputs.prerelease }}
          version: ${{ steps.read_package_version.outputs.version }}

      - name: Show Release URL
        run: echo "View and publish the release at ${{ steps.create_release.outputs.url }}"
