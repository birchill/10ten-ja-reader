@charset "UTF-8";
@import 'themes.css';

*:lang(en),
*:lang(fr),
*:lang(es) {
  /* Meiryo renders more crisply than Arial on Windows */
  font-family: Meiryo, sans-serif;
}

:host {
  position: absolute !important;
  /*
   * asahi.com puts z-index: 1000000 on its banner ads.
   * 小説家になろう puts them at 2999999.
   * Yahoo ニュース puts its banner at 5000000.
   *
   * We go one better than them all (until someone goes higher still).
   */
  z-index: 5000001 !important;
  /* Make sure the drop shadow doesn't get cut off */
  padding-right: 4px !important;
  padding-bottom: 4px !important;

  /* Enforce any max-height set on the popup container. */
  overflow-y: hidden !important;

  /* Make sure the popup container too doesn't receive pointer events */
  pointer-events: none !important;
}

.window {
  max-width: 600px;
  max-width: min(600px, calc(100vw - 30px));
  max-height: var(--max-height, none);
  contain: content;
  border-radius: 5px;
  box-shadow: 0px 0.5px 0.5px rgba(100, 100, 100, 0.15),
    1px 2px 1px rgba(100, 100, 100, 0.15), 2px 4px 8px rgba(100, 100, 100, 0.15);
  font: normal 14px sans-serif;

  color: var(--text-color);
  background: var(--bg-color);
  border: 1px solid var(--border-color);
}

/* When the tabs are shown on top, make the window have a consistent width
   so the tabs don't jump around. */
.window[data-tab-side='top'] {
  max-width: auto;
  /* Fallback for the below */
  width: 500px;
  /* The 30px here is to accommodate scrollbars on Windows plus a bit of
     padding. */
  width: min(500px, calc(100vw - 30px));
}

.window.hidden {
  display: none;
}

.window.touch:not(.hidden) {
  display: flex;
  flex-direction: column;
}

.window.touch .content {
  overflow: auto;
  pointer-events: all;
}

@supports (scrollbar-width: thin) {
  .window .content {
    scrollbar-width: thin;
    scrollbar-color: var(--scrollbar-fg) var(--scrollbar-bg);
  }
}

@supports not (scrollbar-width: thin) {
  .window .content::-webkit-scrollbar {
    width: 5px;
    background-color: var(--scrollbar-bg);
  }

  .window .content::-webkit-scrollbar-thumb {
    background-color: var(--scrollbar-fg);
  }
}

.window .status-bar-wrapper {
  display: flex;
  flex-direction: column;
  overflow: hidden;
}

.window .status-bar-wrapper > .status-bar {
  flex-shrink: 0;
}

/* Tab bar */

.tab-bar {
  flex-shrink: 0;

  display: flex;
  padding: 0;
  margin: 0;
  /* Safari appears to need the following */
  overflow: hidden;

  background: var(--cell-highlight-bg);
  color: var(--cell-highlight-fg);

  pointer-events: auto;
  /* Make sure we are above the content area. This is mostly needed when we are
   * showing the copy overlay since the entry data might overflow its region in
   * that case. */
  z-index: 1;
}

.tabs {
  flex-grow: 1;
  display: flex;
  padding: 0;
  margin: 0;
}

.tabs .tab {
  flex-grow: 1;
  list-style: none;
  font-size: 0.8em;
  -webkit-user-select: none;
  user-select: none;
}

.window.touch .tabs .tab {
  font-size: 1em;
}

.tabs .tab a {
  opacity: 0.7;
  display: flex;
  align-items: center;
  padding: 0.5em 18px;
  line-height: 1;
  text-decoration: none;
}

@media (max-width: 400px) {
  .window[data-tab-side='top'] .tabs .tab a span:lang(en) {
    font-size: 0.7em;
  }
}

@media (max-width: 350px) {
  .window[data-tab-side='top'] .tabs .tab {
    flex-grow: 0;
  }
  .window[data-tab-side='top'] .tabs .tab a span {
    display: none;
  }
  .window[data-tab-side='top'] .tabs .tab a .icon {
    margin-right: 0px;
  }
}

.window.touch .tabs .tab a {
  padding: 0.7em 18px;
}

.tabs .tab a .icon {
  display: block;
  width: 12px;
  height: 12px;
  margin-right: 5px;
  /* Push the icon up a little so it looks more aligned with the text */
  margin-bottom: 1px;
  fill: currentcolor;
}

.window.touch .tabs .tab a .icon {
  width: 14px;
  height: 14px;
}

.tabs .tab[aria-selected] {
  background: var(--bg-color);
}

.tabs .tab[aria-selected] a {
  color: var(--text-color);
}

.tabs .tab:not([aria-selected]) a {
  opacity: 0.8;
  color: var(--cell-highlight-fg);
}

.tabs .tab:not([aria-selected]):hover {
  filter: brightness(1.1);
}

.tabs .tab:not([aria-selected]):hover a {
  opacity: 1;
}

.tabs .tab.disabled {
  opacity: 0.3;
  pointer-events: none;
}

.window:not(.touch) .settings,
.window:not(.touch) .close {
  display: none;
}

.tab-bar .settings,
.tab-bar .close {
  flex-shrink: 0;
  align-self: center;
  margin: 2px;
}

.window .close-button-wrapper {
  display: flex;
  overflow: auto;
}

.window .close-button-wrapper .close {
  z-index: 1;
  flex: 0 0 auto;
  margin: 4px;
  /* Drop margin since the meta element should have sufficient padding */
  margin-left: 0px;
}

/*
 * The following uses .close .close-button because we have two configurations:
 * a) The close button is a child of the tab bar
 * b) The close button is a child of the close-button-wrapper
 */
.settings-button,
.close .close-button {
  appearance: none;
  border: none;
  line-height: 1;
  padding: 6px;
  border-radius: 20px;
  color: var(--text-color);
}

.settings-button {
  background: transparent;
}

.settings-button:hover,
.close .close-button {
  background: var(--bg-color);
}

.settings-button:hover,
.close .close-button:hover {
  filter: brightness(1.1);
}

.settings-button svg,
.close .close-button svg {
  display: block;
  width: 15px;
  height: 15px;
  stroke: currentColor;
  stroke-linecap: round;
  stroke-linejoin: round;
  stroke-opacity: 0.7;
  fill: none;
}

.settings-button svg {
  stroke-width: 2px;
}

.close .close-button svg {
  stroke-width: 5px;
}

.settings-button:hover svg,
.close .close-button:hover svg {
  stroke-opacity: 1;
}

/* Tab bar on the side */

.window[data-tab-side='left']:not(.hidden),
.window[data-tab-side='right']:not(.hidden) {
  display: flex;
  flex-direction: row;
}

.window[data-tab-side='left'] .tab-bar,
.window[data-tab-side='right'] .tab-bar {
  flex-direction: column;
  overflow: visible;
}

.window[data-tab-side='right'] .tab-bar {
  order: 1;
}

.window[data-tab-side='left'] .tab-bar .tabs,
.window[data-tab-side='right'] .tab-bar .tabs {
  display: flex;
  flex-direction: column;
}

.window[data-tab-side='left'] .tab-bar .settings,
.window[data-tab-side='right'] .tab-bar .settings {
  margin-bottom: 0.5em;
}

.window[data-tab-side='top'] .tab-bar .close {
  margin-left: 1em;
}

.window[data-tab-side='left'] .tab-bar .close,
.window[data-tab-side='right'] .tab-bar .close {
  order: -1;
  margin-top: 0.5em;
  margin-bottom: 1em;
}

.window[data-tab-side='left'] .tabs .tab,
.window[data-tab-side='right'] .tabs .tab {
  flex-grow: 0;
}

.window[data-tab-side='left'] .tabs .tab a,
.window[data-tab-side='right'] .tabs .tab a {
  padding: 0.7em;
}

.window[data-tab-side='left'] .tabs .tab a svg,
.window[data-tab-side='right'] .tabs .tab a svg {
  margin: 0;
}

.window[data-tab-side='left'] .tabs .tab a span,
.window[data-tab-side='right'] .tabs .tab a span {
  display: none;
}

/* Word display */

.wordlist {
  display: flex;
  flex-direction: column;
}

.entry,
.more {
  margin-top: 3px;
  margin-bottom: 3px;
  padding: 4px 14px;
}

.wordlist > .entry:first-child {
  margin-top: 8px;
}

.wordlist > .entry:last-child {
  margin-bottom: 8px;
}

.entry,
.entry * {
  line-height: 1.3;
}

.w-kanji {
  font-size: 18px;
  margin-right: 0.7em;
  color: var(--primary-highlight);
}

.w-kanji .dimmed,
.w-kanji .separator,
.w-kana .dimmed,
.w-kana .separator {
  opacity: 0.6;
}

.w-kana {
  font-size: 18px;
  margin-right: 0.3em;
}

.w-kana > .w-heiban {
  border-top: 1.5px dotted currentcolor !important;
}

.w-kana > .w-binary {
  /* Add a gap below so the border doesn't overlap with the definition */
  display: inline-block;
  margin-bottom: 0.2em;
}

.w-kana > .w-binary > * {
  /* Drop gaps between borders */
  margin: 0;
  /* Make room for the borders
   * (and to compensate for the extra margin we added to the wrapper above) */
  font-size: 90%;
}

.w-kana > .w-binary > .h-l {
  border-top: 1.5px dotted currentcolor !important;
  border-right: 1.5px dotted currentcolor !important;
}

.w-kana > .w-binary > .l-h {
  border-bottom: 1.5px dotted currentcolor !important;
  border-right: 1.5px dotted currentcolor !important;
}

.w-kana > .w-binary > .h {
  border-top: 1.5px dotted currentcolor !important;
}

.w-kana > .w-binary > .l {
  border-bottom: 1.5px dotted currentcolor !important;
}

.w-romaji {
  font-size: 14px;
  margin-right: 0.3em;
}

.w-kana + .w-romaji {
  margin-left: 0.3em;
}

.w-kana,
.w-romaji {
  color: var(--reading-highlight);
}

.w-kanji .w-head-info,
.w-kana .w-head-info {
  margin-left: 0.3em;
  font-size: 10px;
}

.w-kanji .svgicon,
.w-kana .svgicon {
  display: inline-block;
  width: 12px;
  height: 12px;
  margin-left: 3px;
  margin-right: 3px;
  fill: currentcolor;
}

.w-kanji .svgicon path,
.w-kana .svgicon path {
  fill: currentcolor;
}

.w-conj {
  font-size: 12px;
  color: var(--conj-color);
}

.w-def {
  font-size: 13px;
}

.w-def .w-inf {
  font-size: 12px;
}

/* Give group headings a bit more space. They typically consist of a series of
 * which can easily look cramped when there are tags on the line above or below
 * it. */
.w-def .w-group-head {
  margin-top: 2px;
  margin-bottom: 3px;
}

/* Especially when we have group headings amongst other definitions, we want a
 * bit more vertical space before they start. */
.w-def ol + .w-group-head {
  margin-top: 6px;
}

.w-def ul {
  padding-left: 1.5em;
  margin: 0;
}

/* Add a little breathing space between native language definitions and
 * subsequent English definitions. */
.w-def ul + .w-group-head,
.w-def ul + ol {
  margin-top: 6px;
}

.w-def ol {
  padding-left: 1.5em;
  list-style-type: decimal !important;
  margin: 0;
}

.w-def ol li {
  list-style-type: decimal !important;
  font-size: 13px;
  line-height: 1.5;
}

.w-def ul li {
  list-style-type: circle !important;
  font-size: 13px;
  line-height: 1.5;
}

.w-def.foreign,
.w-def .foreign {
  opacity: 0.85;
}

.w-def .w-type {
  font-size: 12px;
}

.w-def .tag {
  font-size: 10px;
  border: 1px solid var(--tag-border) !important;
  border-radius: 3px;
  margin-left: 0.5em;
  padding: 0px 3px;
  white-space: nowrap;
}

.w-def .tag-fem {
  background: var(--tag-pink);
}

.w-def .tag-masc {
  background: var(--tag-blue);
}

.w-def .tag-place {
  background: var(--tag-green);
}

.w-def .w-field {
  background: var(--tag-green);
}

.w-def .w-misc {
  background: var(--tag-blue);
}

.w-def .w-dial {
  background: var(--tag-pink);
}

.w-def .w-pos,
.w-def .w-field,
.w-def .w-misc,
.w-def .w-dial {
  margin-left: 0em;
  margin-right: 0.5em;
}

.w-def .w-lsrc,
.w-def .w-lsrc * {
  font-size: 12px;
}

.window .entry.-selected {
  color: var(--selected-highlight);
  background: var(--selected-bg);
  border-radius: 2px;
}

@media (hover) {
  .window.touch .entry:hover {
    color: var(--selected-highlight);
    background: var(--selected-bg);
    border-radius: 2px;
    cursor: pointer;
    /* Make the highlight brighter so we can distinguish it from a selection made
     * using the keyboard. */
    filter: brightness(1.2);
  }
  .window.touch .entry.-selected:hover {
    /* Let keyboard selection override the hover state */
    filter: none;
  }
}

.window .entry.-selected .w-def .tag {
  color: var(--selected-tag-color);
  border-color: var(--selected-tag-border) !important;
}

@media (hover) {
  .window.touch .entry:hover .w-def .tag {
    color: var(--selected-tag-color);
    border-color: var(--selected-tag-border) !important;
  }
}

.window .entry.-selected .w-kanji {
  color: var(--selected-highlight);
}

@media (hover) {
  .window.touch .entry:hover .w-kanji {
    color: var(--selected-highlight);
  }
}

.window .entry.-selected .w-kana,
.window .entry.-selected .w-romaji {
  color: var(--selected-reading-highlight);
}

@media (hover) {
  .window.touch .entry:hover .w-kana,
  .window.touch .entry:hover .w-romaji {
    color: var(--selected-reading-highlight);
  }
}

.window .entry.-selected .w-def,
.window .entry.-selected .w-def * {
  color: var(--selected-def-color);
}

@media (hover) {
  .window.touch .entry:hover .w-def,
  .window.touch .entry:hover .w-def * {
    color: var(--selected-def-color);
  }
}

.window .entry.-selected .w-conj {
  color: var(--selected-conj-color);
}

@media (hover) {
  .window.touch .entry:hover .w-conj {
    color: var(--selected-conj-color);
  }
}

.window .entry.-flash {
  animation: flash 0.5s;
}

@keyframes flash {
  from {
    background: white;
    color: white;
  }
}

.title {
  background: var(--title-bg);
  color: var(--title-fg);
  font-size: 10px;
  padding: 10px 14px 6px;
  border-radius: 5px 5px 0 0;
  margin-bottom: 3px;
}

.name-table {
  padding-bottom: 6px;
  margin-top: 8px;
}

.name-table.-multicol {
  column-count: 2;
  column-gap: 1em;
}

.name-table.-multicol .entry {
  /* Avoid column breaks within an entry */
  page-break-inside: avoid;
  break-inside: avoid;
}

.name-table .entry {
  /*
   * Something goes funny with the margins in multicol so that the entries
   * no longer line up.
   */
  margin-top: 0;
}

.name-table .w-def div {
  margin-bottom: 2px;
}

/* Kanji display */

.kanji-table {
  padding: 10px 18px;
}

/* kanji: top part of the kanji table */

.kanji-table .top-part {
  display: flex;
  margin-bottom: 12px;
}

.kanji-table .top-part > *:nth-child(2) {
  flex-grow: 1;
}

/* kanji: character itself */

.kanji-table .kanji {
  color: var(--primary-highlight);
  line-height: 1;
  font-size: 60px;
  font-family: serif;
  text-align: center;
  margin-inline-end: 20px;
  padding-top: 0.1em;
  text-shadow: rgba(0, 0, 0, 0.2) 1px 1px 4px;
}

@media (hover) {
  .window.touch .kanji:hover {
    color: var(--selected-highlight);
    background: var(--selected-bg);
    border-radius: 2px;
    filter: brightness(1.2);
  }
}

.window.-copy-active .kanji-table .kanji {
  color: var(--selected-highlight);
  background: var(--selected-bg);
  border-radius: 2px;
}

.window.-copy-finished .kanji-table .kanji,
.window.-copy-error .kanji-table .kanji {
  animation: flash 0.5s;
}

/* kanji: readings */

.kanji-table .readings {
  color: var(--reading-highlight);
  font-size: 14px;
  margin-top: 4px;
  margin-bottom: 10px;
}

.kanji-table .okurigana {
  color: var(--okurigana-color);
}

.kanji-table .nanorilabel {
  color: var(--reading-label);
  font-size: 11px;
}

/* kanji: meta */

.kanji-table .meta {
  margin-left: -5px;
  margin-bottom: 4px;
}

.kanji-table .meta .tag {
  font-size: 12px;
  border: 1px solid currentcolor !important;
  border-radius: 3px;
  padding: 2px;
  margin: 2px;
}

/* kanji: meanings */

.kanji-table .meanings {
  font-size: 14px;
  margin-bottom: 10px;
}

/* kanji: grade, freq, strokes */

.kanji-table .misc {
  display: flex;
}

.kanji-table .misc > * {
  flex-grow: 1;
  display: flex;
  align-items: baseline;
}

.kanji-table .misc > :not(:first-child) {
  margin-left: 12px;
}

.kanji-table .misc .strokes span,
.kanji-table .misc .freq span,
.kanji-table .misc .grade span {
  font-size: 13px;
}

.kanji-table .misc .freq .denom {
  font-size: 9px;
}

.kanji-table .misc .svgicon {
  display: inline-block;
  width: 12px;
  height: 12px;
  margin-right: 6px;
  fill: currentcolor;
}

/* kanji: components */

.kanji-table .components {
  margin-block-start: 10px;
  /* Subtract the padding at the start of the row so the text lines up */
  margin-inline-start: -1em;
}

.kanji-table .components table {
  border-collapse: collapse;

  /*
   * There's something odd in Firefox where, when you're viewing a text/plain
   * document, the .window { color: white } rule doesn't inherit into the
   * table so we have to explicitly re-establish the color there.
   */
  color: var(--text-color);
}

.kanji-table .components .char,
.kanji-table .components .reading,
.kanji-table .components .meaning,
.kanji-table .components .-baseradical td {
  vertical-align: top;
  font-size: 11px;
  padding-top: 0.3em;
  padding-bottom: 0.3em;
  padding-left: 1em;
  padding-right: 1em;
}

.kanji-table .components .reading {
  padding-left: 0.5em;
  padding-right: 0.5em;
}

.kanji-table .components .-radical * {
  background: var(--cell-highlight-bg);
  color: var(--cell-highlight-fg);
}

.kanji-table .components .-radical .char {
  border-top-left-radius: 0.5rem;
  border-bottom-left-radius: 0.5rem;
}

.kanji-table .components .-radical .meaning {
  border-top-right-radius: 0.5rem;
  border-bottom-right-radius: 0.5rem;
}

.kanji-table .components .-baseradical td {
  color: var(--cell-highlight-fg);
  font-style: italic;
}

/* kanji: references */

.references {
  --bg-overhang: 8px;
  margin-top: 12px;
  display: grid;
  grid-template-columns: repeat(2, minmax(200px, 1fr));
  grid-column-gap: 0.5em;
  margin-left: calc(-1 * var(--bg-overhang));
  margin-right: calc(-1 * var(--bg-overhang));
  width: calc(100% + 2 * var(--bg-overhang));
}

@media (max-width: 450px) {
  .references {
    grid-template-columns: revert;
  }
}

.references .ref {
  display: flex;
  padding: 2px var(--bg-overhang);
  border-radius: 0.5em;
  justify-content: space-between;
}

.references .ref.-highlight {
  background: var(--cell-highlight-bg);
}

.references .ref.-highlight * {
  color: var(--cell-highlight-fg);
}

.references .name,
.references .value {
  font-size: 12px;
}

.references .value {
  margin-left: 0.5em;
}

/*
 * Keyboard keys
 */

.status-bar {
  position: relative;
  width: 100%;
  background: var(--status-bg);
  max-height: 3em;
}

.status-bar > * {
  padding: 5px 8px 5px;
}

.status-bar.-subdued {
  opacity: 0.7;
}

.status-bar kbd {
  color: rgb(10, 10, 10);
  font-size: 0.8rem;
  font-family: monospace;
  height: 1.2rem;
  padding: 0.2rem;
  border-radius: 0.2rem;
  background: white;
  border: 1px solid #909090 !important;
}

.status-bar .spinner {
  display: inline-block;
  width: 12px;
  height: 12px;
  margin-right: 7px;
  fill: currentcolor;
  animation: spin-ccw 0.8s linear infinite;
}

.window.-copy-finished .status-bar > .keys,
.window.-copy-error .status-bar > .keys {
  animation: fade-out 0.4s linear forwards;
}

.window.-copy-finished .status-bar > .status {
  opacity: 0;
  animation: fade-in 0.4s linear forwards, fade-out 0.3s 0.9s forwards;
}

.window.-copy-finished .status-bar {
  animation: roll-up 0.3s 1s forwards;
}

@keyframes fade-out {
  to {
    opacity: 0;
  }
}

@keyframes fade-in {
  to {
    opacity: 1;
  }
}

@keyframes roll-up {
  to {
    max-height: 0;
  }
}

@keyframes spin-ccw {
  to {
    transform: rotate(-360deg);
  }
}

.window.-copy-error .status-bar > .status {
  opacity: 0;
  animation: fade-in 0.4s linear forwards;
  background: rgba(255, 204, 204, 0.8);
  color: #b43e3e;
}

/*
 * Bonus name
 */

.wordlist .bonus-name {
  margin-top: 8px;
  margin-bottom: 3px;
  background: var(--meta-bg);
}

.wordlist .bonus-name .more {
  padding: 0px 14px;
}

/*
 * Meta information
 */

.wordlist .meta {
  margin-top: 8px;
  margin-bottom: 3px;
  padding: 3px 14px;
  background: var(--meta-bg);
}

.wordlist .meta:last-child {
  margin-bottom: 8px;
}

.wordlist .meta.-metaonly {
  background: transparent;
}

.wordlist .meta.era,
.wordlist .meta.measure > * {
  display: flex;
  align-items: baseline;
}

.wordlist .meta .equals {
  padding-left: 5px;
  padding-right: 5px;
}

/* Meta: currency */

.wordlist .currency > .main {
  font-size: 18px;
}

.wordlist .currency > .main .equation-part {
  display: inline-flex;
  align-items: baseline;
}

.wordlist .currency .main .curr {
  opacity: 0.6;
  font-size: 14px;
  margin-right: 0.3em;
}

.wordlist .currency > .timestamp {
  opacity: 0.6;
  font-size: 10px;
}

/* Meta: era */

.wordlist .meta .era-name,
.wordlist .meta .era-name ruby,
.wordlist .meta.era .equals,
.wordlist .meta .seireki {
  font-size: 22px;
}

.wordlist .meta .era-name,
.wordlist .meta .era-name * {
  color: var(--primary-highlight);
}

.wordlist .meta .era-name rt {
  font-size: 12px;
}

.wordlist .meta .seireki {
  color: var(--reading-highlight);
}

/* Meta: measure */

.wordlist .meta.measure .main {
  font-size: 18px;
}

.wordlist .meta.measure .unit {
  padding-left: 3px;
}

.wordlist .meta.measure .alt {
  opacity: 0.6;
  margin-top: 3px;
}

/* Meta: number */

.wordlist .meta.number {
  line-height: 1;
  padding-bottom: 6px;
  padding-top: 6px;
}

/* Meta: shogi */

.wordlist .meta.shogi .label {
  font-size: 10px;
  border: 1px solid var(--tag-border) !important;
  border-radius: 3px;
  margin-right: 0.5em;
  padding: 0px 3px;
  white-space: nowrap;
}

/*
 * Copy overlay for touch screens
 */
.copy-overlay {
  box-sizing: border-box;
  width: 100%;
  display: flex;
  flex-direction: column;
  /* It's important to align to the top so that if the popup is very long we
   * don't end up putting the copy buttons off screen somewhere. */
  justify-content: start;
  align-items: center;
  padding-top: 24px;
  padding-bottom: 24px;
  isolation: isolate;
  overflow: hidden;

  /* We fade the background so we always want a dark foreground color here,
   * regardless of the theme. */
  color: #1d1a19;
}

/* Blurring for the entry area when the copy overlay is showing */
.window.-has-overlay .content .grid-stack > .entry-data {
  pointer-events: none;
  filter: blur(20px);
  transition: filter 0.3s ease-in-out;
}

.window.-has-overlay .content .grid-stack > .copy-overlay {
  background: hsla(0, 0%, 97%, 0.6);
  transition: background-color 0.3s ease-in-out;
}

/* If the overlay is showing, don't constrain the window height since it might
 * mean that the buttons on the overlay get cut off. */
.window.-has-overlay {
  max-height: none;
}

/* Let the size of the overlay determine the overall size of the popup contents.
 *
 * This prevents the window from suddenly getting very large when we drop the
 * max-height definition above.
 *
 * Ideally we'd only do this if we were actually going to constrain the height
 * anyway, but that's hard to detect so we just do this unconditionally and so
 * far it seems to work ok. */
.window.-has-overlay .content .grid-stack > .entry-data {
  position: absolute;
  width: 100%;
}

.copy-overlay .copy-heading {
  opacity: 0.8;
}

.copy-overlay .copy-options {
  max-width: 90%;
  list-style: none;
  margin: 0 8px;
  padding: 0;
}

.copy-overlay .copy-options li {
  margin-top: 12px;
  margin-bottom: 12px;
}

/* Reset some button styles */
.copy-overlay button {
  -webkit-appearance: none;
  appearance: none;
  background: transparent;
  margin: 0;
  padding: 0;
  border: 0;
  font: inherit;
  color: inherit;
}

.copy-overlay .copy-options li button {
  font-size: 16px;
  font-weight: 600;
  width: 100%;
  min-height: 60px;
  background: white;
  padding: 8px 32px;
  border-radius: 16px;
  --shadow-color: 0deg 0% 0%;
  box-shadow: 0.2px 0.6px 0.5px hsl(var(--shadow-color) / 0.12),
    0.4px 1.2px 1.1px -1.5px hsl(var(--shadow-color) / 0.09),
    1.4px 3.7px 3.3px -3px hsl(var(--shadow-color) / 0.06),
    3.8px 10.3px 9.1px -4.4px hsl(var(--shadow-color) / 0.04);
  border: 0.1px solid hsla(0deg, 0%, 0%, 0.1);
}

.copy-overlay .copy-options .copy-preview {
  margin-top: 4px;
  display: flex;
  white-space: nowrap;
  color: #817470;
  font-size: 12px;
  font-weight: 400;
  max-width: 200px;
  overflow: hidden;
  -webkit-mask-image: linear-gradient(to right, black 180px, transparent);
  mask-image: linear-gradient(to right, black 180px, transparent);
}

.copy-overlay .copy-options .copy-preview .icon {
  flex-shrink: 0;
  width: 1.2em;
  height: 1.2em;
  margin-right: 6px;
  opacity: 0.6;
}

.copy-overlay .copy-options .copy-preview span {
  min-width: 0;
}

.copy-overlay .copy-options button.-icon-label,
.copy-overlay .cancel-button {
  display: flex;
  justify-content: center;
  align-items: center;
}

.copy-overlay .copy-options button.-icon-label .icon,
.copy-overlay .cancel-button .icon {
  width: 1.2em;
  height: 1.2em;
  margin-right: 6px;
  margin-top: -0.2em;
  opacity: 0.6;
}

.copy-overlay .cancel-button {
  padding: 12px 36px;
  color: rgba(0, 0, 0, 0.4);
}

/*
 * Utility: grid stack
 */

.grid-stack,
.-stack {
  display: grid;
  grid-template-rows: [stack-start] auto [stack-end];
}

.grid-stack > *,
.-stack > * {
  grid-column: 1 / -1;
  grid-row: stack-start / stack-end;
}
