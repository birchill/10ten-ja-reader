:root.firefox {
  /*
   * Stop Firefox's scrollbars from disappearing and re-appearing triggering
   * possible infinite updates.
   *
   * See: https://github.com/birchill/10ten-ja-reader/issues/708
   */
  overflow: hidden;
}

/*
 * Reproduce some styles from Firefox's browser_styles for other browsers' sake
 */
:root:not(.firefox) * {
  box-sizing: border-box;
}

:root:not(.firefox) .browser-style {
  text-align: left;
  margin-bottom: 6px;
}

:root:not(.firefox) .browser-style > input[type='text']:disabled,
:root:not(.firefox) textarea.browser-style:disabled {
  opacity: 0.5;
}

:root:not(.firefox) .panel-section-formElements {
  padding-top: 16px;
  padding-bottom: 16px;
}

:root.chromium:not(.edge) body {
  min-width: 600px;
}

:root.safari body {
  max-width: 600px;
  margin-left: auto;
  margin-right: auto;
}

/*
 * If we are using Firefox's browser styles for headings, drop the extra margin
 * we'd otherwise add for headings.
 */
:root.firefox h2 {
  margin-top: 0;
  margin-bottom: 0;
}

/*
 * Fix Firefox browser_styles which doesn't seem to define disabled colors
 * for checkboxes.
 */
:root.firefox .browser-style > input[type='checkbox']:checked:disabled {
  background-color: gray;
  border-color: darkgray;
}

/*
 * Hide contents until it is ready / translated.
 */
:root > * {
  transition: opacity 0.25s ease-out;
}
:root:not(.initialized) > * {
  opacity: 0;
}

fieldset {
  padding: 0;
  border: none;
}

#tenten-ja-options,
#tenten-ja-options td {
  padding: 0 10px;
  font-family: sans-serif;
  font-size: 10pt;
}

#tenten-ja-options a {
  color: #0996f8;
  text-decoration-style: dotted;
}

#tenten-ja-options a:visited {
  color: #0996f8;
}

/*
 * extensions.css sets buttons to have height: 24px which means if they wrap
 * the label extends outside the button itself.
 *
 * In general we don't want these buttons to wrap, but if they do we should make
 * them look nice.
 */
#tenten-ja-options button.browser-style {
  /* Don't wrap buttons */
  white-space: nowrap;
  /* If they do wrap, however, make them look nice */
  height: auto;
  min-height: 24px;
  text-align: center;
}

.checkbox-row {
  display: flex;
  flex-direction: row;
  align-items: start;
}
.checkbox-row > :not(input) {
  margin-inline-start: 6px;
  flex: 1;
}
:root.firefox .checkbox-row > :not(input) {
  /* Line up better with Firefox's browser checkmarks */
  margin-top: 4px;
}

/*
 * Custom radio button styles
 */

.icon-radio > input[type='radio'] {
  display: none;
}

.icon-radio > label {
  border: 1px solid transparent;
  text-align: center;
  cursor: pointer;
  transition: background-color 0.3s, opacity 0.3s;
  border-radius: 5px;
}

.icon-radio > input[type='radio']:not(:checked) + label {
  opacity: 0.5;
}
.icon-radio > input[type='radio']:not(:checked) + label:hover,
.icon-radio > input[type='radio']:not(:checked) + label:active {
  opacity: 1;
}

.icon-radio {
  display: grid;
  width: -moz-max-content;
  width: max-content;
}

/*
 * Custom radio variant: centered
 */

.icon-radio.-centered {
  margin-left: auto;
  margin-right: auto;
}

/*
 * Custom radio variant: label along the bottom
 */

.icon-radio.-with-labels > label {
  display: flex;
  flex-direction: column;
  align-items: center;
  border: 1px solid #888;
  border-radius: 5px;
  padding: 0;
  background: white;
  overflow: hidden;
}

.icon-radio.-with-labels > label .icon {
  background: #eee;
  width: 100%;
}

.icon-radio.-with-labels > label:hover .icon {
  background: #ddd;
}

.icon-radio.-with-labels > label .text {
  display: flex;
  align-items: center;

  width: 100%;
  border-top: 1px solid #888;
  padding: 5px 8px;
}

.icon-radio.-with-labels > label .text .radio {
  display: inline-block;
  width: 14px;
  height: 14px;
  border-radius: 14px;
  margin-right: 8px;
  background: #ddd;
  border: 1px solid #888;
}

.icon-radio.-with-labels > input[type='radio']:checked + label .text .radio {
  border: 1px solid #0670cc;
  background: white;
  box-shadow: inset 0 0 0 2.5px #0996f8;
}

.icon-radio.-with-labels > input[type='radio']:not(:checked) + label:hover .text .radio {
  background: #ccc;
}

/*
 * Custom radio variant: black and white for inactive options
 */

.icon-radio.-bw-inactive > input[type='radio']:not(:checked) + label {
  filter: grayscale(100%);
}
.icon-radio.-bw-inactive > input[type='radio']:not(:checked) + label:hover,
.icon-radio.-bw-inactive > input[type='radio']:not(:checked) + label:active {
  filter: none;
}

/*
 * Highlight style selection
 */

.highlightstyle-select {
  grid-template-columns: repeat(2, 1fr);
  gap: 8px;
}

@media (max-width: 300px) {
  .highlightstyle-select {
    grid-template-columns: 1fr;
  }
}

.highlightstyle-select > label .icon {
  font-size: 25px;
  padding: 16px 8px;
}

.highlightstyle-select > label .icon .text-fade {
  -webkit-mask: linear-gradient(90deg, transparent, black 20%, black 80%, transparent);
  mask: linear-gradient(90deg, transparent, black 20%, black 80%, transparent);
}

.highlightstyle-select > label .highlight.yellow {
  background: #fff394;
  color: #1d1a19;
}

.highlightstyle-select > label .highlight.blue {
  background: #2589ed;
  color: white;
}

#highlight-style-section {
  display: none;
}

@supports selector(::highlight(yer)) {
  #highlight-style-section {
    display: revert;
  }
}

#highlight-style-section .highlightstyle-select {
  margin-bottom: 1.5em;
}

/*
 * Toolbar icon selection
 */

.toolbaricon-select {
  grid-template-columns: repeat(2, 1fr);
  gap: 8px;
}

.toolbaricon-select > label .icon {
  padding: 16px 32px;
  text-align: center;
}

.toolbaricon-select > label .icon .image {
  width: 48px;
  height: 48px;
  filter: drop-shadow(0px 1px 1px rgba(0, 0, 0, 0.25));
}

fieldset.bordered {
  padding: 12px 24px;
  border: 0.5px solid lightgrey;
}

.section-explanation {
  margin-top: 1em;
  margin-bottom: 1em;
  line-height: 1.5;
  font-style: italic;
}

/*
 * Popup-style selection
 */

.popupstyle-select {
  grid-template-columns: 1fr 1fr;
  margin-bottom: 1em;
}

@media (max-width: 500px) {
  .popupstyle-select {
    grid-template-columns: 1fr;
  }
}

.popupstyle-select > label {
  min-width: 200px;
  padding: 0.5em;
  transition: background-color 0.3s, opacity 0.3s;
}

.popupstyle-select > input[type='radio']:checked + label {
  border-color: #aaa;
  background: #ddd;
}

.popupstyle-select > label .overlay {
  display: grid;
}

.popupstyle-select > label .overlay > * {
  grid-column: 1 / 2;
  grid-row: 1 / 1;
}

.popupstyle-select > label .overlay > :nth-child(2) {
  -webkit-mask: linear-gradient(-45deg, black 50%, transparent 50%);
  mask: linear-gradient(-45deg, black 50%, transparent 50%);
}

.popup-preview {
  position: static;
  display: inline-block;
  min-width: 180px;
  text-align: left;
  width: revert !important;
}

/*
 * Interactivity selection
 */

.interactivity-select {
  grid-template-columns: repeat(2, 1fr);
  gap: 8px;
}

@media (max-width: 500px) {
  .interactivity-select {
    grid-template-columns: 1fr;
  }
}

.interactivity-select > label .icon {
  padding: 8px 16px;
  text-align: center;
}

.interactivity-select > label .icon .svg {
  filter: drop-shadow(0px 1px 1px rgba(0, 0, 0, 0.25));
  width: 150px;
}

#mouse-interactivity-section .info {
  margin-top: 1em;
  margin-bottom: 1.5em;
}

/*
 * New badge
 */
.new-badge {
  font-size: 12px;
  line-height: 12px;

  margin: 0 8px;
  padding: 2px 10px;

  font-weight: 500;
  color: #991b1b;
  border-radius: 20px;
  background: #fee2e2;

  display: inline-block;
}

/*
 * Learn more
 */
.info {
  background: #eff6ff;
  border-radius: 12px;
  margin-left: -10px;
  margin-right: -10px;
  line-height: 1;

  display: flex;
  align-items: center;
  gap: 10px;
  color: #1d4ed8;
  padding: 0 10px;
}

.info a {
  display: inline-flex;
  align-items: center;
  gap: 10px;
  padding: 10px 0;
  text-decoration: underline currentcolor !important;
}

.info a,
.info a:visited {
  color: inherit !important;
}

.info .icon {
  width: 16px;
}

/*
 * Tab side selection
 */

.tabdisplay-select {
  grid-template-columns: repeat(4, 1fr);
  gap: 8px;
}

@media (max-width: 600px) {
  .tabdisplay-select {
    grid-template-columns: repeat(2, 1fr);
  }
}

@media (max-width: 300px) {
  .tabdisplay-select {
    grid-template-columns: 1fr;
  }
}

.tabdisplay-select > label {
  min-width: 120px;
}

.tabdisplay-select > label .icon {
  padding: 8px 16px;
  text-align: center;
}

.tabdisplay-select > label .icon .svg {
  width: 48px;
  height: 48px;
  filter: drop-shadow(0px 1px 1px rgba(0, 0, 0, 0.25));
}

.tabdisplay-select > label .icon .svg .popup {
  fill: var(--bg-color);
  stroke: var(--border-color);
  stroke-width: 0.5px;
}

.tabdisplay-select > label .icon .svg .tab {
  fill: var(--cell-highlight-bg);
  stroke: var(--border-color);
  stroke-width: 0.5px;
  clip-path: url(#popup-outline);
}

/* See notes in device.ts:probablyHasPhysicalKeyboard for how we arrived at this
 * media query.
 *
 * Note that 'not' here negates the _whole_ media query.
 */
.needs-keyboard {
  display: none;
}
.has-keyboard .needs-keyboard {
  display: block;
}
@media not screen and (hover) and (pointer: fine) {
  .needs-keyboard {
    display: none;
  }
}

@media not screen and (any-hover: hover) and (any-pointer: fine) {
  .needs-mouse {
    display: none;
  }
}

.key-grid {
  display: grid;
  grid-template-columns: minmax(12em, auto) 1fr;
}

.key .key-box {
  font-size: 10pt;
  height: 2.5em;
  padding: 0.5em;
  text-align: center;
  border-radius: 0.7em;
  background: white;
}

.key label span.key-box {
  /*
   * Make the labels actually sit in the centre of the keys.
   */
  display: inline-flex;
  flex-direction: column;
  justify-content: center;

  margin-inline-end: 1em;
  min-width: 2.5em;

  border: 1px solid #909090;
  border-bottom-color: grey;
  border-bottom-width: 3px;
}

.key label .or {
  margin-inline-start: -0.25em;
  margin-inline-end: 0.5em;
}

/*
 * For text boxes, we let browser_styles define the border color
 *
 * (But we only have browser_style on Firefox at the moment.)
 */
:root:not(.firefox) .key input[type='text'] {
  border: 1px solid #909090;
}
.key input[type='text'] {
  border-bottom-width: 3px !important;
  width: 6em;

  /*
   * Hide the caret
   */
  color: transparent;
  text-shadow: 0 0 0 black;
}
/*
 * We shouldn't need this but extensions.css 'disabled' selector is broken.
 *
 * See: https://bugzilla.mozilla.org/show_bug.cgi?id=1484501
 */
:root.firefox .key input[type='text']:disabled:hover {
  border-color: #b1b1b1;
}
/*
 * When the textbox is in a chrome page, it gets an extra inner div as anonymous
 * content so we need to make sure that gets centered too or else extensions.css
 * will reset it to text-align: start.
 *
 * Actually... this doesn't work. It looks like Web Extensions are not allowed
 * to style anonymous content so there is no way for us to override the styles
 * set by extensions.css which _is_ allowed to style it.
 *
 * See https://bugzilla.mozilla.org/show_bug.cgi?id=1484502
 */
.key input[type='text'] > .anonymous-div {
  text-align: center;
}
.key input[type='checkbox'] {
  /*
   * Drop the margin on checkboxes so they actually line up with the text.
   */
  margin-top: 0;
}
/*
 * Make unselected checkboxes lighter so it's easier to read the resulting
 * shortcut.
 */
.key input[type='checkbox']:not(:checked) + label .key-box {
  opacity: 0.5;
  border-bottom-style: solid;
}
.key input[type='checkbox']:disabled + label .key-box {
  opacity: 0.5;
}
.key-description {
  padding: 0.5em;
  /*
   * This magic number makes the baseline of the first line line-up with the
   * labels on the keys.
   */
  padding-block-start: 0.8em;
  padding-inline-start: 1.5em;
}
.key-description .icon {
  display: inline-block;
  vertical-align: top;
  margin-top: -0.25em;
  margin-left: 0.5em;
  width: 1.5em;
  height: 1.5em;
  background-size: cover;
  background-repeat: no-repeat;
}
.key-description .icon.-warning {
  background-image: url('/images/warning-yellow.svg');
}
.key-description .icon.-error {
  background-image: url('/images/warning-red.svg');
}
.key-description p {
  line-height: 1.25;
}

/* This is a little different to key-grid in that it prioritizes the key in the
 * first column */
.key-and-icon-grid {
  display: grid;
  grid-template-columns: max-content 1fr;
  gap: 0 2em;
  align-items: center;
}

.key-and-icon-grid .row-label {
  grid-column: 1 / -1;
}

.key-and-icon-grid .icon {
  width: 100px;
  color: #aaa;
}

.key-list {
  margin: 0;
  margin-top: 1em;
  padding: 0;
}
.key-list > li {
  list-style: none;
  margin-top: 0.5em;
  margin-bottom: 0.5em;
}

.key-extended-explanation {
  grid-column: span 2 / span 2;
  margin-top: 0.5em;
  margin-bottom: 0.5em;
  padding: 8px 16px;
  border: 1px solid gray;
  border-radius: 8px;
}
.key-extended-explanation#browser-commands-alternative {
  display: none;
}

.dict-lang #lang {
  width: 10em;
}

.dict-lang .note {
  margin-top: 1em;
  padding: 8px 16px;
  background: hsl(45, 100%, 96%);
  border: 1px solid hsl(43, 77%, 27%);
  border-radius: 8px;
  color: hsl(43, 77%, 27%);
}

/*
 * Grid layout panel
 */

.panel-section-grid {
  display: grid;
  width: 95%;
  grid-template-columns: repeat(2, minmax(250px, 1fr));
  grid-column-gap: 1em;
  grid-auto-flow: column;
  padding-top: 16px;
  padding-bottom: 16px;
}
:root.firefox .panel-section-grid {
  margin-left: 16px;
  margin-right: 16px;
}

/* Edge options window is tiny */
@media (max-width: 500px) {
  .panel-section-grid {
    grid-template-columns: minmax(250px, 1fr);
    grid-auto-flow: row;
  }
}

.panel-section-db-summary {
  padding-top: 16px;
  padding-bottom: 16px;
  display: block;
}
:root.firefox .panel-section-db-summary {
  padding: 16px;
}

.panel-section-db-summary > :not(:first-child) {
  margin-top: 16px;
}

.panel-section-db-summary > .db-summary-status {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  min-height: 3em;
  gap: 20px;
}

.panel-section-db-summary > .db-summary-status.-error {
  background: #fee;
  border: 1px solid #700;
  border-radius: 8px;
  padding: 8px 16px;
  color: #700;
}

.panel-section-db-summary > .db-summary-status.-warning {
  padding: 8px 16px;
  background: hsl(45, 100%, 96%);
  border: 1px solid hsl(43, 77%, 27%);
  border-radius: 8px;
  color: hsl(43, 77%, 27%);
}

.panel-section-db-summary .db-summary-version-grid {
  flex-grow: 1;
  display: grid;
  grid-auto-flow: column;
  grid-auto-columns: 1fr;
  grid-template-rows: repeat(2, auto);
  column-gap: 20px;
  row-gap: 3px;
}

@media (max-width: 500px) {
  .panel-section-db-summary .db-summary-version-grid {
    column-gap: 5px;
  }
}

.panel-section-db-summary .db-source-version {
  color: #777;
  font-size: 9pt;
}

.panel-section-db-summary .db-summary-info {
  flex-grow: 1;
}

.panel-section-db-summary .db-summary-info.-italic {
  font-style: italic;
}

.panel-section-db-summary .db-summary-info .progress {
  display: block;
  margin-bottom: 4px;
}

.panel-section-db-summary .db-summary-info .label {
  display: block;
  font-style: italic;
}

.panel-section-db-summary .last-check {
  font-style: italic;
  font-size: 11px;
}

.panel-section-db-summary .db-admin {
  background: #fee;
  border: 1px solid #700;
  border-radius: 8px;
  padding: 8px 16px;
  color: #700;
}
